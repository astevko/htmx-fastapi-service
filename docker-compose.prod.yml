services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+psycopg://htmx_user:htmx_password@postgres:5432/htmx_db
    expose:
      - "8000" # Expose port internally for nginx
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=htmx_db
      - POSTGRES_USER=htmx_user
      - POSTGRES_PASSWORD=htmx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U htmx_user -d htmx_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro # SSL certificates (optional)
    depends_on:
      - web
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  # # Redis for caching and session management
  # redis:
  #   image: redis:7-alpine
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 128M
  #       reservations:
  #         memory: 64M

volumes:
  # redis_data:
  postgres_data:
