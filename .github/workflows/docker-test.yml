name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.test
        platforms: linux/amd64
        push: false
        load: true  # Load the image into local Docker daemon
        tags: htmx-fastapi-service:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Start the container with SQLite database
        echo "Starting container with SQLite database..."
        docker run -d --name test-container -p 8000:8000 htmx-fastapi-service:test
        
        # Wait for the container to start
        echo "Waiting for container to start..."
        sleep 15
        
        # Check container status and logs
        echo "Container status:"
        docker ps -a --filter name=test-container
        
        echo "Container logs:"
        docker logs test-container
        
        # Wait for application to fully start (SQLite should be faster)
        sleep 30
        
        # Check if container is still running
        if ! docker ps --filter name=test-container --filter status=running | grep -q test-container; then
          echo "❌ Container is not running!"
          docker logs test-container
          exit 1
        fi
        
        # Test the health endpoint
        echo "Testing health endpoint..."
        curl -f http://localhost:8000/ || exit 1
        
        # Test the login page
        echo "Testing login page..."
        curl -f http://localhost:8000/ || exit 1
        
        # Test static files
        echo "Testing static files..."
        curl -f http://localhost:8000/static/css/style.css || exit 1
        
        # Test that the application is responding (without authentication)
        echo "Testing application response..."
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/)
        if [ "$response" != "200" ]; then
          echo "❌ Application not responding correctly (HTTP $response)"
          exit 1
        fi
        
        # Clean up
        echo "Cleaning up..."
        docker stop test-container
        docker rm test-container
        
        echo "✅ All tests passed!"

    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: htmx-fastapi-service:test
        format: 'table'
        exit-code: '0'  # Don't fail on vulnerabilities
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
      continue-on-error: true
